{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0.0",
    "title": "Xendit Backend Coding Test Master",
    "description": "API Documention for tracking and create rides",
    "license": {
        "name": "MIT",
        "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "/",
      "description": "Api"
    }
  ],
  "tags": [
    {
      "name": "Health",
      "description": "API for health check server."
    },
    {
      "name": "Rides",
      "description": "API for create and tracking rides."
  }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": [
            "Health"
        ],
        "summary": "Ping the server to check the server is UP",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
                "$ref": "#/definitions/Health"
            }
          }
        }
      }
    },
    "/rides": {
      "get": {
        "tags": ["Rides"],
        "summary": "Get list of rides with pagination",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "description": "current page of pagination",
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "limit number of result for each page",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/Rides"
            }
          },
          "404": {
            "description": "NOT FOUND ERROR",
            "schema": {
              "$ref": "#definitions/Error"
            }
          },
          "500": {
            "description": "SERVER ERROR",
            "schema": {
              "$ref": "#definitions/Error"
            }
          }
        }
      },
      "post": {
        "tags": ["Rides"],
        "summary": "Create a ride record",
        "requestBody": {
          "description": "Ride object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#definitions/RidePayload"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#definitions/Ride"
            }
          },
          "400": {
            "description": "BAD REQUEST",
            "schema": {
              "$ref": "#definitions/Error"
            }
          },
          "404": {
            "description": "NOT FOUND ERROR",
            "schema": {
              "$ref": "#definitions/Error"
            }
          },
          "500": {
            "description": "SERVER ERROR",
            "schema": {
              "$ref": "#definitions/Error"
            }
          }
        }
      }
    },
    "/rides/{rideID}": {
      "parameters": [
        {
          "name": "rideID",
          "in": "path",
          "required": true,
          "description": "ID of the ride that we want to match",
          "type": "string"
        }
      ],
      "get": {
          "tags": [
              "Rides"
          ],
          "summary": "Get ride with given rideID",
          "parameters": [
              {
                  "in": "path",
                  "name": "rideID",
                  "required": true,
                  "description": "Rider with rideID",
                  "schema": {
                      "$ref": "#/definitions/rideID"
                  }
              }
          ],
          "responses": {
              "200": {
                  "description": "OK",
                  "schema": {
                      "$ref": "#/definitions/Ride"
                  }
              },
              "404": {
                  "description": "NOT FOUND ERROR"
              },
              "500": {
                "description": "SERVER ERROR",
                "schema": {
                  "$ref": "#definitions/Error"
                }
              }
          }
      }
    }
  },
  "definitions": {
    "Health": {
      "type": "string"
    },
    "rideID": {
      "type": "string"
    },
    "Ride": {
      "type": "object",
      "properties": {
        "rideID": {
          "type": "string"
        },
        "startLat": {
          "type": "number"
        },
        "startLong": {
          "type": "number"
        },
        "endLat": {
          "type": "number"
        },
        "endLong": {
          "type": "number"
        },
        "riderName": {
          "type": "string"
        },
        "driverName": {
          "type": "string"
        },
        "dirverVehicle": {
          "type": "string"
        }
      }
    },
    "Rides": {
      "type": "object",
      "properties": {
        "page": {
          "type": "number"
        },
        "limit": {
          "type": "number"
        },
        "count": {
          "type": "number"
        },
        "result": {
          "type": "array",
          "items": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/definitions/Ride"
            }
          }
        }
      }
    },
    "RidePayload": {
      "type": "object",
      "properties": {
        "start_lat": {
          "type": "number"
        },
        "start_long": {
          "type": "number"
        },
        "end_lat": {
          "type": "number"
        },
        "end_long": {
          "type": "number"
        },
        "rider_name": {
          "type": "string"
        },
        "driver_name": {
          "type": "string"
        },
        "driver_vehicle": {
          "type": "string"
        }
      }
    },
    "Error": {
      "type": "object",
      "properties": {
        "error_code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}